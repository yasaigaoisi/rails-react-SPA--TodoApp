{"ast":null,"code":"var _jsxFileName = \"/Users/homboyasutaka/Desktop/projects/todo-web/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Task from './component/Task';\nimport { Center, Box, CheckboxGroup, Text } from '@chakra-ui/react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const initialTasks = [{\n    name: \"買い物\",\n    isDone: true\n  }, {\n    name: \"ランニング\",\n    isDone: false\n  }, {\n    name: \"プログラミングの勉強\",\n    isDone: false\n  }];\n  const [tasks, setAasks] = useState([]);\n  useEffect(() => {\n    setTasks(initialTasks);\n  }, []);\n  const toggleIsDone = index => {\n    const tasksCopy = [...tasks];\n    const isDone = tasksCopy[index].isDone;\n    tasksCopy[index].isDone = !isDone;\n    setTasks(tasksCopy);\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    mt: \"64px\",\n    children: /*#__PURE__*/_jsxDEV(Center, {\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          mb: \"24px\",\n          children: /*#__PURE__*/_jsxDEV(Text, {\n            fontSize: \"24px\",\n            fontWeight: \"bold\",\n            children: \"\\u30BF\\u30B9\\u30AF\\u4E00\\u89A7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CheckboxGroup, {\n          children: tasks.map((task, index) => {\n            return /*#__PURE__*/_jsxDEV(Task, {\n              index: index,\n              name: task.name,\n              isDone: task.isDone,\n              toggleIsDone: toggleIsDone\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"+ea/7ta/TzyWgCTpkexUbwYsdgU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Task","Center","Box","CheckboxGroup","Text","jsxDEV","_jsxDEV","App","_s","initialTasks","name","isDone","tasks","setAasks","setTasks","toggleIsDone","index","tasksCopy","mt","children","mb","fontSize","fontWeight","fileName","_jsxFileName","lineNumber","columnNumber","map","task","_c","$RefreshReg$"],"sources":["/Users/homboyasutaka/Desktop/projects/todo-web/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Task from './component/Task';\nimport { Center, Box, CheckboxGroup, Text } from '@chakra-ui/react';\n\nconst App = () => {\n  const initialTasks = [\n    {\n      name: \"買い物\",\n      isDone: true,\n    },\n    {\n      name: \"ランニング\",\n      isDone: false,\n    },\n    {\n      name: \"プログラミングの勉強\",\n      isDone: false,\n    },\n  ];\n\n  const [tasks, setAasks] = useState([]);\n\n  useEffect(() => {\n    setTasks(initialTasks);\n  }, []);\n\n  const toggleIsDone = (index) => {\n    const tasksCopy = [...tasks];\n    const isDone = tasksCopy[index].isDone;\n    tasksCopy[index].isDone = !isDone;\n    setTasks(tasksCopy)\n  };\n\n  return (\n    <Box mt=\"64px\">\n      <Center>\n        <Box>\n          <Box mb=\"24px\">\n            <Text fontSize=\"24px\" fontWeight=\"bold\">\n              タスク一覧\n            </Text>\n          </Box>\n          <CheckboxGroup>\n            {tasks.map((task, index) => {\n              return (\n                <Task\n                  key={index}\n                  index={index}\n                  name={task.name}\n                  isDone={task.isDone}\n                  toggleIsDone={toggleIsDone}\n                />\n              );\n            })}\n          </CheckboxGroup>\n        </Box>\n      </Center>\n    </Box>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,IAAI,MAAM,kBAAkB;AACnC,SAASC,MAAM,EAAEC,GAAG,EAAEC,aAAa,EAAEC,IAAI,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpE,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAMC,YAAY,GAAG,CACnB;IACEC,IAAI,EAAE,KAAK;IACXC,MAAM,EAAE;EACV,CAAC,EACD;IACED,IAAI,EAAE,OAAO;IACbC,MAAM,EAAE;EACV,CAAC,EACD;IACED,IAAI,EAAE,YAAY;IAClBC,MAAM,EAAE;EACV,CAAC,CACF;EAED,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAEtCC,SAAS,CAAC,MAAM;IACde,QAAQ,CAACL,YAAY,CAAC;EACxB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMM,YAAY,GAAIC,KAAK,IAAK;IAC9B,MAAMC,SAAS,GAAG,CAAC,GAAGL,KAAK,CAAC;IAC5B,MAAMD,MAAM,GAAGM,SAAS,CAACD,KAAK,CAAC,CAACL,MAAM;IACtCM,SAAS,CAACD,KAAK,CAAC,CAACL,MAAM,GAAG,CAACA,MAAM;IACjCG,QAAQ,CAACG,SAAS,CAAC;EACrB,CAAC;EAED,oBACEX,OAAA,CAACJ,GAAG;IAACgB,EAAE,EAAC,MAAM;IAAAC,QAAA,eACZb,OAAA,CAACL,MAAM;MAAAkB,QAAA,eACLb,OAAA,CAACJ,GAAG;QAAAiB,QAAA,gBACFb,OAAA,CAACJ,GAAG;UAACkB,EAAE,EAAC,MAAM;UAAAD,QAAA,eACZb,OAAA,CAACF,IAAI;YAACiB,QAAQ,EAAC,MAAM;YAACC,UAAU,EAAC,MAAM;YAAAH,QAAA,EAAC;UAExC;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACJ,CAAC,eACNpB,OAAA,CAACH,aAAa;UAAAgB,QAAA,EACXP,KAAK,CAACe,GAAG,CAAC,CAACC,IAAI,EAAEZ,KAAK,KAAK;YAC1B,oBACEV,OAAA,CAACN,IAAI;cAEHgB,KAAK,EAAEA,KAAM;cACbN,IAAI,EAAEkB,IAAI,CAAClB,IAAK;cAChBC,MAAM,EAAEiB,IAAI,CAACjB,MAAO;cACpBI,YAAY,EAAEA;YAAa,GAJtBC,KAAK;cAAAO,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAKX,CAAC;UAEN,CAAC;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACW,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACb;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV,CAAC;AAAAlB,EAAA,CAvDKD,GAAG;AAAAsB,EAAA,GAAHtB,GAAG;AAyDT,eAAeA,GAAG;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}