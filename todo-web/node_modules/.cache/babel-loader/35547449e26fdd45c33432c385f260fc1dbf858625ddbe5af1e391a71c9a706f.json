{"ast":null,"code":"var _jsxFileName = \"/Users/homboyasutaka/Desktop/projects/todo-web/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Task from './component/Task';\nimport { Flex, Center, Box, CheckboxGroup, Text, Input, Button } from '@chakra-ui/react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [name, setName] = useState(\"\");\n  const fetch = async () => {\n    const res = await axios.get(\"http://localhost:3010/tasks\");\n    setTasks(res.data);\n  };\n  const createTask = async () => {\n    await axios.post(\"http://localhost:3010/tasks\", {\n      name: name,\n      is_done: false\n    });\n    setName(\"\");\n    fetch();\n  };\n  useEffect(() => {\n    fetch();\n  }, []);\n  const toggleIsDone = index => {\n    const tasksCopy = [...tasks];\n    const isDone = tasksCopy[index].isDone;\n    tasksCopy[index].isDone = !isDone;\n    setTasks(tasksCopy);\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    mt: \"64px\",\n    children: /*#__PURE__*/_jsxDEV(Center, {\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          mb: \"24px\",\n          children: /*#__PURE__*/_jsxDEV(Text, {\n            fontSize: \"24px\",\n            fontWeight: \"bold\",\n            children: \"\\u30BF\\u30B9\\u30AF\\u4E00\\u89A7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CheckboxGroup, {\n          children: tasks.map((task, index) => {\n            return /*#__PURE__*/_jsxDEV(Task, {\n              index: index,\n              name: task.name,\n              isDone: task.isDone,\n              toggleIsDone: toggleIsDone\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"DWIPJouDqKHcwEilupxaBIVsLpc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Task","Flex","Center","Box","CheckboxGroup","Text","Input","Button","axios","jsxDEV","_jsxDEV","App","_s","tasks","setTasks","name","setName","fetch","res","get","data","createTask","post","is_done","toggleIsDone","index","tasksCopy","isDone","mt","children","mb","fontSize","fontWeight","fileName","_jsxFileName","lineNumber","columnNumber","map","task","_c","$RefreshReg$"],"sources":["/Users/homboyasutaka/Desktop/projects/todo-web/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Task from './component/Task';\nimport {\n  Flex,\n  Center,\n  Box,\n  CheckboxGroup,\n  Text,\n  Input,\n  Button,\n} from '@chakra-ui/react';\nimport axios from 'axios';\n\nconst App = () => {\n  const [tasks, setTasks] = useState([]);\n  const [name, setName] = useState(\"\");\n\n  const fetch = async () => {\n    const res = await axios.get(\"http://localhost:3010/tasks\");\n    setTasks(res.data);\n  }\n\n  const createTask = async () => {\n    await axios.post(\"http://localhost:3010/tasks\", {\n      name: name,\n      is_done: false,\n    });\n    setName(\"\");\n    fetch();\n  }\n\n  useEffect(() => {\n    fetch();\n  }, []);\n\n  const toggleIsDone = (index) => {\n    const tasksCopy = [...tasks];\n    const isDone = tasksCopy[index].isDone;\n    tasksCopy[index].isDone = !isDone;\n    setTasks(tasksCopy)\n  };\n\n  return (\n    <Box mt=\"64px\">\n      <Center>\n        <Box>\n          <Box mb=\"24px\">\n            <Text fontSize=\"24px\" fontWeight=\"bold\">\n              タスク一覧\n            </Text>\n          </Box>\n          <CheckboxGroup>\n            {tasks.map((task, index) => {\n              return (\n                <Task\n                  key={index}\n                  index={index}\n                  name={task.name}\n                  isDone={task.isDone}\n                  toggleIsDone={toggleIsDone}\n                />\n              );\n            })}\n          </CheckboxGroup>\n        </Box>\n      </Center>\n    </Box>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}